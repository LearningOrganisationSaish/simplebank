name: Deploy to production

on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write

jobs:

  deploy:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: azure/setup-kubectl@v4
        with:
          version: 'v1.31.2' # default is latest stable
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ARN_ROLE}}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Load secrets and save to app.env
        run: aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text| jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: simplebank
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t latest .
          docker push -a $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Update aws_auth.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          commitChange: false
          changes: |
            {
              "eks/issuer.yaml": {
                "spec.acme.email": ${{ secrets.WEBSITE_OWNER_EMAIL}}
              },
              "eks/aws_auth.yaml": {
                "data.mapRoles.rolearn": ${{ secrets.ARN_ROLE}}
              },
            }


      - name: Deploy image to Amazon EKS
        run: |
          kubectl apply -f aws_auth.yml
          kubectl apply -f deployment.yml
          kubectl apply -f service.yml
          kubectl apply -f issuer.yml
          kubectl apply -f ingress.yml
